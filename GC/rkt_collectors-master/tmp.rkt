#lang plai/mutator
(allocator-setup "simple_collector.rkt" 200)
(define (build-one)
  (let* ((x0 'x)
         (x1 empty)
         (x2 'y)
         (x3 #f)
         (x4 (lambda (x) (if (= x 0) x0 (if (= x 1) x1 x1))))
         (x5 #f))
    x2))
(define (traverse-one x2) (symbol=? 'y x2))
(define (trigger-gc n)
  (if (zero? n) 0 (begin (cons n n) (trigger-gc (- n 1)))))
(define (loop i)
  (if (zero? i)
    'passed
    (let ((obj (build-one)))
      (trigger-gc 200)
      (if (traverse-one obj) (loop (- i 1)) 'failed))))
(loop 200)
